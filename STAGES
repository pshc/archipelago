=================
FEATURE REDUCTION
=================

TopCDecl TopDefn TopADT | TopExtr TopEnv TopTypeclass
Assign BrkCont Cond Defn Discard Ret While | Assert WriteExtr
Attr Bind Call IntStrTupLits | AndOr? DictLit FuncExpr EnvOps ExtrOps Match

=> turn closures into envs
out: stream of TopEnvs

TopCDecl TopDefn TopADT | TopExtr TopEnv TopTypeclass
Assign BrkCont Cond Defn Discard Ret While | Assert WriteExtr
Attr Bind Call IntStrTupLits | AndOr? DictLit FuncExpr EnvOps ExtrOps Match

=> turn funcexprs into direct bindings
mod: func-indp't expr repls (in-order stream or ext augmentation)

TopCDecl TopDefn+{StaticReplacment} TopADT | TopExtr TopEnv TopTypeclass
Assign BrkCont Cond Defn Discard Ret While | Assert WriteExtr
Attr Bind+++ Call IntStrTupLits | AndOr? DictLit ~~~~~~~ EnvOps ExtrOps Match

=> turn envs into runtime calls, topenvs into defns
mod: func-indp't expr repls (in-order stream)
out: stream of TopDefns

TopCDecl TopDefn+ TopADT | TopExtr ~~~~~ TopTypeclass
Assign BrkCont Cond Defn Discard Ret While | Assert WriteExtr
Attr Bind+ Call IntStrTupLits | AndOr? DictLit ~~~~~~ ExtrOps Match

=> turn typeclasses into extrs
mod: FIER
out: stream of TopExtrs

TopCDecl TopDefn+ TopADT | TopExtr ~~~~~~~~
Assign BrkCont Cond Defn Discard Ret While | Assert WriteExtr
Attr Bind+ Call IntStrTupLits | AndOr? DictLit ExtrOps Match

=> turn extrs into runtime calls
mod: FIER

TopCDecl TopDefn+ TopADT | ~~~~~~~~
Assign BrkCont Cond Defn Discard Ret While | Assert ~~~~~
Attr Bind+ Call IntStrTupLits | AndOr? DictLit ~~~~ Match

=> turn metaliterals into ctor calls
mod: FIER

TopCDecl TopDefn+ TopADT |
Assign BrkCont Cond Defn Discard Ret While | Assert
Attr Bind+ Call IntStrTupLits | AndOr? ~~~~~ Match

=====================
EXPRESSION FLATTENING
=====================

=> turn cond&while into bodystmts
out: new-type stmt stream

TopCDecl TopDefn+ TopADT |
BodyCond BodyWhile | Assign BrkCont ~~~~ Defn Discard Ret ~~~~ | Assert
Attr Bind+ Call IntStrTupLits | AndOr? Match

=> turn assigns into stores
out: new stmt stream

TopCDecl TopDefn+ TopADT |
Store BodyCond BodyWhile | ~~~~ BrkCont Defn Discard Ret | Assert
Attr Bind+ Call IntStrTupLits | AndOr? Match

=> turn local bindings into loads, global bindings into @refs
out: new stmt stream

TopCDecl TopDefn+ TopADT |
Store Load BodyCond BodyWhile | ~~~~ BrkCont Defn Discard Ret | Assert
Bind@ | Attr ~~~~ Call IntStrTupLits | AndOr? Match

=> turn asserts into conds and @fail() calls
out: stmt stream

TopCDecl TopDefn+ TopADT |
Store Load BodyCond BodyWhile | BrkCont Defn Discard Ret | ~~~~~
Bind@ | Attr Call IntStrTupLits | AndOr? Match

=> unroll calls
out: new stmt stream

TopCDecl TopDefn+ TopADT |
CallStmt Store Load BodyCond BodyWhile | BrkCont Defn Discard Ret |
Bind@ | Attr ~~~~ IntStrTupLits | AndOr? Match

=> prune discards
out: same stream

TopCDecl TopDefn+ TopADT |
CallStmt Store Load BodyCond BodyWhile | BrkCont Defn ~~~~~ Ret |
Bind@ | Attr IntStrTupLits | AndOr? Match

=> unroll tuple literals
out: new stream

TopCDecl TopDefn+ TopADT |
CallStmt Store+{StoreTuple} Load BodyCond BodyWhile | BrkCont Defn Ret |
Bind@ | Attr IntStr~~~Lits | AndOr? Match

=> turn and/or/ternary into conds
out: new stream

TopCDecl TopDefn+ TopADT |
CallStmt Store+ Load BodyCond BodyWhile | BrkCont Defn Ret |
Bind@ | Attr IntStrLits | ~~~~ Match

=> pattern matching
out: same stream (minus non-core exprs)

TopCDecl TopDefn+ TopADT |
CallStmt Store+ Load BodyCond BodyWhile | BrkCont Defn Ret |
Bind@ | Attr+{_ix} IntStrLits | ~~~~

=> generate ctors
out: ctor extrinsic augmentations or same stream

TopCDecl TopDefn+{CtorFuncs} TopADT |
CallStmt Store+ Load BodyCond BodyWhile | BrkCont Defn Ret |
Bind@ | Attr+{_ix} IntStrLits |

=> generate topstrlits
out: extr augmentations

TopCDecl TopDefn+{TopStrLits} TopADT |
CallStmt Store+ Load BodyCond BodyWhile | BrkCont Defn Ret |
Bind@ | Attr+{_ix} Int~~~Lit |

=========
REGISTERS
=========

=> turn local defns to allocs
out: new stream

TopCDecl TopDefn+ TopADT |
Alloc CallStmt Store+ Load BodyCond BodyWhile RetReg | BrkCont ~~~~ ~~~ |
Bind@ | Attr+{_ix} IntLit |

=> turn bodies into blocks and jumps
out: new stream

TopCDecl TopDefn+ TopADT |
Alloc CallStmt Store+ Load ~~~~ ~~~~ Label Jmp JmpCond RetReg | ~~~~
Bind@ | Attr+{_ix} IntLit |

=> final form

TopCDecl TopDefn+ TopADT |
Alloc CallStmt Store+ Load Label Jmp JmpCond RetReg |
Bind@ | Attr+{_ix} IntLit |
